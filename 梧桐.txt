努力的结果，并不是为了证明自己有多了不起，而是我失去的东西，我一定要自己拿回来

date:2021/1/26 23:30
1、戒烟
2、戒酒
3、温柔
4、跑步
5、c++
6、单片机
7、操作系统
8、网络
9、linux系统


总结:遇事不决，可问春风。春风不语，自从本心。

date:2021/1/27
1、跑步
2、c++

date:2021/1/29
1、跑步
2、FreeRTOS
3、C++
4、STM32
总结：时来天地皆同力，命去英雄不自由
date:2021/1/31
1、数据结构
2、freeRTOS

date:2021/2/1
1、堆、堆排序
<<<<<<< HEAD
2、

date:2021/2/2
1，智能指针
2，拷贝
3，运算符重载
4，面向对象编程（继承与多态）
=======
2、C++
3、

date:2021/2/2
1、智能指针
2、拷贝
3、运算符重载
4、面向对象编程（继承与多态）
date:2021/2/3
1、文件IO输出
2、随机数
3、class 友元
4、日志记录程序

date:2021/2/4
1、char      1
   short     2
   int       4
   double    8
   float     4
   long      8  32位电脑long占4个字节与int一样
   指针      8
   32位电脑指针 4个字节
   
date:2021/2/5
makefile 基本操作：
make的文件名可以自定义 用下面的格式进行make操作
make -f 文件名 = make --file 文件名

$@ 所有的目标文件
$^ 所有的依赖文件
%.c %.o 任意的.c .o 文件 *.c *.o 所有的.c .o 文件
目标文件:依赖文件
    gcc 依赖文件 -o 目标文件

make_1:make_1.o
	gcc make_1.o -o make_1
make_1.o:make_1.S
	gcc -c make_1.S -o make_1.o
make_1.S:make_1.i
	gcc -S make_1.i -o make_1.S
make_1.i:make_1.c
	gcc -E make_1.c -o make_1.i
#伪目标
.PHONY:
clearall:
	rm -rf make_1.o make_1.S make_1.i make_1
clear:
	rm -rf make_1.o make_1.S make_1.i 
万能版本

TAR=make_1
OBJ = make_1.o
CC := gcc
#$@ 所有的目标文件
#$^ 所有的依赖文件
$(TAR):$(OBJ)
	$(CC) $^ -o $@
%.o:%.c
	$(CC) -c make_1.c -o make_1.o
.PHONY:
clear: 
	rm -rf $(OBJ)

data:2021/3/2
1、makefile复习
2、链接器
3、消息队列
4、信号量

data:2021/3/3
1、链接器
2、进程概念
3、斗鱼直播源(potplayer)



>>>>>>> centos7
